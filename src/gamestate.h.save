#ifndef GAMESTATE_H_INCLUDED
#define GAMESTATE_H_INCLUDED

/// GAME STATE CLASS

enum {MAINMENU, OPCIONES, INGAMEMENU, STORE, PRE_GAME, START_PLAYING, PLAYING, HELP, GAMEOVER, EXIT};

class CGameState{

private:
    int actual_state;

public:

    void show_state();

    void changeState(int new_state){actual_state = new_state;}
    int getState(){return actual_state;}
};

void CGameState::show_state(){

    switch(actual_state){

        case MAINMENU:      al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: MAINMENU"); break;
        case OPCIONES:      al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: OPCIONES"); break;
        case INGAMEMENU:    al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: INGAMEMENU"); break;
        case INGAMEMENU:    al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: STORE"); break;
        case PRE_GAME:      al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: PRE_GAME"); break;
        case START_PLAYING: al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: START_PLAYING"); break;
        case PLAYING:       al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: PLAYING"); break;
        case HELP:          al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: HELP"); break;
        case GAMEOVER:      al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: GAMEOVER"); break;
        case EXIT:          al_draw_text(keepcalm12,al_map_rgb(180,180,180),5+camx,ALTO-15+camy,0,"STATE: EXIT"); break;
    }
}

CGameState game_state;

#endif // GAMESTATE_H_INCLUDED
